
## target architecture (if not defined in Makefile)
ifndef TARGET_ARCH
 TARGET_ARCH=macosx #$(subst $(SYSTEMC)/lib-,,$(wildcard $(SYSTEMC)/lib-*))
endif

SYSTEMC ?= /cad/tools/systemc

## Your compiler
CC ?= g++

## set some directories 
GREENBUS_DIR ?= /Users/schroede/mydev/greensocs_greenbus
#GREENBUS_DIR ?= / # dummy
GREENSOCKET_DIR ?= /Users/schroede/mydev/greensocs_greensocket/greensocket
GPSOCKET_DIR ?= /Users/schroede/mydev/greensocs_greenbus/GPSocket_branch
TLM2_DIR ?= /Users/schroede/mydev/TLM-2008-06-09/include/tlm
GS_CONTROL_DIR ?= /Users/schroede/mydev/greensocs_greencontrol/greenstarcore/greencontrol_cci_branch/
BOOST ?= /cad/tools/boost
LUA_DIR ?= /cad/tools/lua5.1
CCI_DIR ?= /Users/schroede/mydev/greensocs_greencontrol/greenstarcore/api
CCI_API_IMPL_DIR ?= /Users/schroede/mydev/greensocs_greencontrol/greenstarcore/gs_api_implementation
CCI_PAR_IMPL_DIR ?= /Users/schroede/mydev/greensocs_greencontrol/greenstarcore/gs_param_implementation


SCV_INCLUDE ?= /cad/tools/systemc-scv/include
SCV_LIB ?= /cad/tools/systemc-scv/lib-$(TARGET_ARCH)

## Static or dynamic cast class hierarchy
#ifdef STATIC
## Note: dynamic cast variant of the generic protocol is deprecated. So always use static casts.
STATIC_DEFINE=-DUSE_STATIC_CASTS
#endif

## Generic Protocol Extensions
ifdef EXTENSION
EXT_TR_DEFINE=-DEXTENDED_TRANSACTION=$(EXTENSION)
endif

DEFFLAGS = $(EXT_TR_DEFINE) $(STATIC_DEFINE) -DSC_INCLUDE_DYNAMIC_PROCESSES


LDFLAGS =

INCDIR = -I$(GS_CONTROL_DIR) -I$(BOOST) -I$(GREENBUS_DIR) -I$(GREENSOCKET_DIR)/include -I$(GPSOCKET_DIR) -I$(TLM2_DIR) -I$(SCV_INCLUDE) -I. -I.. -I$(SYSTEMC)/include -I$(LUA_DIR)/include -I$(CCI_DIR) -I$(CCI_PAR_IMPL_DIR) -I$(CCI_API_IMPL_DIR)
LIBDIR = -L$(SCV_LIB) -L. -L.. -L$(SYSTEMC)/lib-$(TARGET_ARCH) -L$(LUA_DIR)/lib -L$(CCI_PAR_IMPL_DIR) -L$(CCI_API_IMPL_DIR) -L$(CCI_DIR)

## use this line if you want to link against dust
#LIBS   =  -lscv -ldust -lsystemc -lm $(EXTRA_LIBS)

## use this line if you dont need dust
## here may be needed to write -lscv at the beginning - which also may cause problems!
LIBS   =  -lsystemc -lm -lcciparamimpl -lcciapiimpl -lcciapi $(EXTRA_LIBS) 


EXE    = $(MODULE).x

.SUFFIXES: .cc .cpp .o .x

$(EXE): $(OBJS) /cad/tools/systemc/lib-macosx/libsystemc.a #$(SYSTEMC)/lib-$(TARGET_ARCH)/libsystemc.a 
	$(CC) $(CFLAGS) $(DEFFLAGS) $(LDFLAGS) $(INCDIR) $(LIBDIR) -o $@ $(OBJS) $(LIBS) 2>&1 | c++filt
#	strip $(EXE)

.cpp.o:
	$(CC) $(CFLAGS) $(DEFFLAGS) $(INCDIR) -c $<

.cc.o:
	$(CC) $(CFLAGS) $(DEFFLAGS) $(INCDIR) -c $<

clean::
	rm -f $(OBJS) *~ $(EXE) core

ultraclean: clean
	rm -f Makefile.deps

Makefile.deps:
#	$(CC) $(CFLAGS) $(DEFFLAGS) $(INCDIR) -M $(SRCS) >> Makefile.deps

#include Makefile.deps
