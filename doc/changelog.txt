ChangeLog
---------

- changed global static factory function names and namespaces
- changed broker.add_param to be called by cci_header class
- added optional broker parameter to param constructors
- separated header from implementation into different files
- introduced new path substructure in api path
- introduced cci::cnf namespace
- changed cci.h to be main include file and
- made cci_config.h the config part include file
- renamed cci_broker_module into cci_broker_manager and added convenience cci_broker_manager_module (deriving from sc_module)
- renamed cnf_api to cnf_broker

**** CCI-1.31-cci_api-160310.tar.gz ****

- Pimpl idiom / Opaque Pointer concept for params
- removed boost version dependency of implementation
- replaced boost int64 with SystemC int64
- replaced boost shared_ptr and function 
- private Broker API and example


**** CCI-1.3-cci_api-240210.tar.gz ****

- changed param hierarchy to be defined by the document and directly implemented thus being used directly by user (without pure virtual interface) (interfaces are just for compile checks)
- added is_invalid implementation, also for uninitialized params
- added locked status and checks to gs implementation
- added is_used dummy to gs implementation
- changed is_used semantic: also true if there WAS an object mapped to the NVP

**** CCI-1.21-cci_api-130110.tar.gz ****

- added syncronize API to base param
- added lock API to base params
- added mutable template types to POs
- added is_used for detecting unconsumed parameters
- added is/set_invalud_value, is_initial_value, is_default_value


**** CCI-1.2-101109.tar.gz ****

- error/warning/info throwing using sc_report mechanism
- added functions for status fields/value origin (is_default_value, is_initial_value, is_invalid_value, set_invalid_value to base param
- added functions set/get_documentation for meta data to base param
- cci_value parameter value representation
- added real number to basic data types
- cci_base_param are objects that can be instantiated.
- renamed cci_param_base to cci_base_param, because it will change from a base class to a param object
- added return type to callbacks (e.g. to support value rejection on pre write callback)
- Changed callback type from function pointer to boost::function.


**** CCI-1.1-280509.tar.gz ****

- Added callback type (reason) to callback function signature
- Error codes as return value instead of bool
- Made basic parameter types JSON independent (just renaming)
  to avoid confusion (JSON not necessary here, only needed for 
  (de)serialize).
- Added notes.txt file.
- Portability: changed long long to sc_dt::uint64


**** CCI-1.0-180509.tar.gz ****

- initial release